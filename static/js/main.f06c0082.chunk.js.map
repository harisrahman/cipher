{"version":3,"sources":["Contexts.js","components/Centered.js","components/Card.js","components/Button.js","components/Wrapper.js","components/CopyBtn.js","components/Textarea.js","components/ToggleButtons.js","workers/Crypt.js","App.js","reportWebVitals.js","index.js"],"names":["FormContext","createContext","Main","styled","div","Centered","props","children","maxWidth","Card","button","p","font","disabled","Button","ref","fref","type","center","undefined","mt","mb","mr","ml","full","Wrapper","Copy","CopyBtn","copyBtn","useRef","onClick","inp","document","createElement","body","appendChild","value","text","select","execCommand","remove","current","focus","data-poptip","tip","style","textarea","Textarea","useContext","setForm","Consumer","formContext","copy","position","right","top","onChange","e","target","ToggleButtons","form","options","map","option","index","title","name","toLowerCase","checked","setToggleHandler","modified_form","dataset","optionname","defaultChecked","data-optionname","Crypt","encrypt","length","min","max","key","Math","floor","random","charCodeAt","result","split","letter","letter_code","encrypted_code","encrypted_letter","String","fromCharCode","join","console","log","App","useState","decrypt","formState","setFormState","Provider","crypt","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.f06c0082.chunk.js","sourcesContent":["import { createContext } from 'react';\r\n\r\nexport const FormContext = createContext(null);\r\n","import React from 'react';\nimport styled from 'styled-components';\n\nfunction Centered(props)\n{\n\treturn (\n\t\t<Main {...props}>\n\t\t\t{props.children}\n\t\t</Main>\n\t);\n}\n\nconst Main = styled.div`\n\twidth: 100%;\n\theight: 100%;\n\tdisplay:flex;\n\tflex-direction: column;\n\talign-items:center;\n\tjustify-content:center;\n`;\n\nexport default Centered;\n","import React from 'react';\nimport styled from 'styled-components';\n\nfunction Card(props)\n{\n\treturn (\n\t\t<Main {...props}>\n\t\t\t{props.children}\n\t\t</Main>\n\t);\n}\n\nconst Main = styled.div`\n\tborder: 0;\n    border-radius: 6px;\n    color: #333;\n    background: #fff;\n    width: 100%;\n\tpadding: 2em;\n\tmargin: 2em;\n    box-shadow: 0 0 20px 0 rgb(62 28 131 / 10%);\n\tmax-width: ${props => props.maxWidth};\n`;\n\nexport default Card;\n","import React from 'react';\nimport styled from 'styled-components';\n\nfunction Button(props)\n{\n\treturn (\n\t\t<Main ref={props.fref} type={props.type || \"button\"} {...props}>\n\t\t\t{props.children}\n\t\t</Main>\n\t);\n}\n\nconst Main = styled.button`\n\tdisplay: inline-block;\n    font-weight: 400;\n    color: #212529;\n    text-align: center;\n    vertical-align: middle;\n    user-select: none;\n    border: 1px solid transparent;\n    padding: ${props => props.p || \".5rem 1.5rem\"};\n    font-size: ${props => props.font || \"1rem\"};\n    line-height: 1.5;\n    border-radius: .25rem;\n\tbackground-color: #000;\n\tcolor: #fff;\n\tcursor: ${props => props.disabled ? \"not-allowed\" : \"pointer\"};\n\n\t&:active\n\t{\n\t\tbackground-color: #0062cc;\n\t\tborder-color: #005cbf;\n\t}\n`;\n\nexport default Button;\n","import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nfunction Wrapper(props)\r\n{\r\n\treturn (\r\n\t\t<Main {...props}>\r\n\t\t\t{props.children}\r\n\t\t</Main>\r\n\t);\r\n}\r\n\r\nconst Main = styled.div`\r\n\ttext-align: ${props => props.center ? \"center\" : undefined};\r\n\tmargin-top: ${props => props.mt};\r\n\tmargin-bottom: ${props => props.mb};\r\n\tmargin-right: ${props => props.mr};\r\n\tmargin-left: ${props => props.ml};\r\n\twidth: ${props => props.full ? \"100vw\" : undefined};\r\n\theight: ${props => props.full ? \"100vh\" : undefined};\r\n`;\r\n\r\nexport default Wrapper;\r\n","import React, { useRef } from 'react';\nimport styled from 'styled-components';\nimport Button from \"./Button\";\n\nfunction CopyBtn(props)\n{\n\tconst copyBtn = useRef(null);\n\n\tfunction doCopy()\n\t{\n\t\tvar inp = document.createElement('input');\n\t\tdocument.body.appendChild(inp);\n\t\tinp.value = props.text;\n\t\tinp.select();\n\t\tdocument.execCommand('copy', false);\n\t\tinp.remove();\n\t\tcopyBtn.current.focus();\n\t}\n\n\treturn (\n\t\t<Copy fref={copyBtn} onClick={doCopy} type=\"button\" data-poptip={props.tip || \"Copied!\"} p=\"0.1rem 0.3rem\" font=\"0.8rem\" style={{ ...props.style }}>Copy</Copy>\n\t);\n}\n\nconst Copy = styled(Button)`\n\t&[data-poptip]\n\t{\n\t\tposition: relative;\n\t\tz-index: 2;\n\t\tcursor: pointer;\n\t}\n\n\t&[data-poptip]:before,\n\t&[data-poptip]:after\n\t{\n\t\tvisibility: hidden;\n\t\topacity: 0;\n\t\tpointer-events: none;\n\t}\n\n\t&[data-poptip]:before\n\t{\n\t\tposition: absolute;\n\t\ttop: -30px;\n\t\tleft: calc(50% + 15px);\n\t\tmargin-left: -50px;\n\t\tpadding: 2px 10px;\n\t\tborder-radius: 3px;\n\t\tbackground-color: #000;\n\t\tbackground-color: hsla(0, 0%, 20%, 0.85);\n\t\tcolor: #fff;\n\t\tcontent: attr(data-poptip);\n\t\ttext-align: center;\n\t\tfont-size: 14px;\n\t}\n\n\t&[data-poptip]:after\n\t{\n\t\tposition: absolute;\n\t\ttop: -6px;\n\t\tleft: 50%;\n\t\tmargin-left: -5px;\n\t\twidth: 0;\n\t\tborder-top: 5px solid #000;\n\t\tborder-top: 5px solid hsla(0, 0%, 20%, 0.9);\n\t\tborder-right: 5px solid transparent;\n\t\tborder-left: 5px solid transparent;\n\t\tcontent: \" \";\n\t\tfont-size: 0;\n\t\tline-height: 0;\n\t}\n\n\t&[data-poptip]:focus:before,\n\t&[data-poptip]:focus:after\n\t{\n\t\tvisibility: visible;\n\t\topacity: 1;\n\t\tanimation: hideAnimation 0.2s ease-in 2s forwards;\n\t\tanimation-fill-mode: forwards;\n\t}\n\n\t@keyframes hideAnimation\n\t{\n\t\tto {\n\t\t\tvisibility:hidden;\n\t\t\toverflow:hidden;\n\t\t\tborder: none;\n\t\t}\n\t}\n\t@-webkit-keyframes hideAnimation\n\t{\n\t\tto {\n\t\t\tvisibility:hidden;\n\t\t\toverflow:hidden;\n\t\t\tborder: none;\n\t\t}\n\t}\n\n`;\n\n\nexport default CopyBtn;\n","import React, { useContext } from 'react';\nimport styled from 'styled-components';\nimport CopyBtn from \"./CopyBtn\";\nimport { FormContext } from '../Contexts';\n\nfunction Textarea(props)\n{\n\tconst [form, setForm] = useContext(FormContext);\n\n\treturn (\n\t\t<FormContext.Consumer>\n\t\t\t{formContext =>\n\t\t\t\t<Wrapper>\n\t\t\t\t\t{props.copy && <CopyBtn style={{ position: \"absolute\", right: \"5px\", top: \"5px\" }} text={formContext[0].text} ></CopyBtn>}\n\t\t\t\t\t<Main {...props} onChange={(e) => setForm({ ...formContext[0], text: e.target.value })} value={formContext[0].text}>\n\t\t\t\t\t\t{props.children}\n\t\t\t\t\t</Main>\n\t\t\t\t</Wrapper>\n\t\t\t}\n\t\t</FormContext.Consumer>\n\t);\n}\n\nconst Wrapper = styled.div`\n\tposition: relative;\n`;\n\nconst Main = styled.textarea`\n\tdisplay: block;\n    width: 100%;\n    min-height: 180px;\n    padding: .375rem .75rem;\n    font-size: 1rem;\n    font-weight: 400;\n    line-height: 1.5;\n    color: #495057;\n    background-color: #fff;\n    background-clip: padding-box;\n    border: 1px solid #ced4da;\n    border-radius: .25rem;\n\tmargin-bottom: 1rem;\n\toverflow: auto;\n    resize: vertical;\n\n\t&:focus\n\t{\n\t\tcolor: #495057;\n\t\tbackground-color: #fff;\n\t\tborder-color: #80bdff;\n\t\toutline: 0;\n\t\tbox-shadow: 0 0 0 0.2rem rgb(0 123 255 / 25%);\n\t}\n`;\n\nexport default Textarea;\n","import React, { useContext } from 'react';\r\nimport styled from 'styled-components';\r\nimport { FormContext } from '../Contexts';\r\n\r\nfunction ToggleButtons(props)\r\n{\r\n\tconst [form, setForm] = useContext(FormContext);\r\n\r\n\tconst options = props.options.map((option, index) =>\r\n\t{\r\n\t\treturn {\r\n\t\t\ttitle: option,\r\n\t\t\tname: option.toLowerCase(),\r\n\t\t\tchecked: index === 0\r\n\t\t};\r\n\t});\r\n\r\n\tfunction setToggleHandler(e)\r\n\t{\r\n\t\tlet modified_form = form;\r\n\r\n\t\toptions.map((option, index) =>\r\n\t\t{\r\n\t\t\tmodified_form[option.name] = option.name == e.target.dataset.optionname;\r\n\r\n\t\t}, modified_form);\r\n\r\n\t\tsetForm(modified_form);\r\n\t}\r\n\r\n\treturn (\r\n\t\t<Main style={{ ...props.style }}>\r\n\t\t\t{\r\n\t\t\t\toptions.map((option, index) =>\r\n\t\t\t\t\t<label key={index}>\r\n\t\t\t\t\t\t<input name={props.name} type=\"radio\" defaultChecked={option.checked} onChange={setToggleHandler} data-optionname={option.name} />\r\n\t\t\t\t\t\t<span>{option.title}</span>\r\n\t\t\t\t\t</label>\r\n\t\t\t\t)\r\n\t\t\t}\r\n\t\t</Main >\r\n\t);\r\n}\r\n\r\nconst Main = styled.div`\r\n\t& label\r\n\t{\r\n\t\tmargin-bottom:0px;\r\n\r\n\t\t:first-child span\r\n\t\t{\r\n\t\t\tborder-radius:3px 0 0 3px\r\n\t\t}\r\n\t\t:last-child span\r\n\t\t{\r\n\t\t\tborder-radius:0 3px 3px 0;\r\n\t\t}\r\n\r\n\t\t> input[type=\"radio\"]\r\n\t\t{\r\n\t\t\tdisplay:none;\r\n\r\n\t\t\t&:checked + span\r\n\t\t\t{\r\n\t\t\t\tbackground: #99a2a8;\r\n\t\t\t\tcolor:#ffffff;\r\n\t\t\t\tbox-shadow: 0 1px 2px rgba(0, 0, 0, 0.15);\r\n\t\t\t\ttext-shadow:1px 1px 0 rgba(0, 0, 0, 0.3);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t> span\r\n\t\t{\r\n\t\t\tpadding: 1rem 2rem;\r\n\t\t\tfont-size: 14px;\r\n\t\t\tfont-size: 0.875rem;\r\n\t\t\tcursor:pointer;\r\n\t\t\tdisplay:inline-block;\r\n\t\t\tbox-shadow: inset 0 1px 4px rgba(41, 41, 41, 0.15);\r\n\t\t\ttext-shadow:1px 1px 0 #ffffff;\r\n\t\t}\r\n\t}\r\n`;\r\n\r\nexport default ToggleButtons;\r\n","function random(min, max)\n{\n\treturn Math.floor(Math.random() * (max - min + 1) + min);\n}\n\nfunction Crypt(text, encrypt)\n{\n\tif (text.length < 1 || (text.length < 2 && encrypt === false)) return \"\";\n\n\tconst key = encrypt ? random(33, 123) : text.charCodeAt(0);\n\n\tlet result = text.split('').map((letter, index) =>\n\t{\n\t\tif (index == 0 && !encrypt) return \"\";\n\n\t\tconst letter_code = letter.charCodeAt(0);\n\n\t\tconst encrypted_code = encrypt ? (letter_code + key) : (letter_code - key);\n\t\tconst encrypted_letter = String.fromCharCode(encrypted_code)\n\n\t\treturn ((index == 0 && encrypt) ? String.fromCharCode(key) : \"\") + encrypted_letter;\n\t}).join('');\n\n\tconsole.log(result);\n\n\t// return text;\n\treturn result;\n}\n\nexport default Crypt;\n","import React, { useState } from 'react';\nimport { FormContext } from './Contexts';\nimport Centered from \"./components/Centered\";\nimport Card from \"./components/Card\";\nimport Button from \"./components/Button\";\nimport Wrapper from \"./components/Wrapper\";\nimport Textarea from \"./components/Textarea\";\nimport ToggleButtons from \"./components/ToggleButtons\";\nimport crypt from \"./workers/Crypt\";\n\nfunction App()\n{\n\tconst [formState, setFormState] = useState({\n\t\ttext: \"\",\n\t\tencrypt: true,\n\t\tdecrypt: false\n\t});\n\n\tfunction doCrypt()\n\t{\n\t\tconst result = crypt(formState.text, formState.encrypt);\n\n\t\tsetFormState({ ...formState, text: result });\n\t}\n\n\treturn (\n\t\t<Wrapper full>\n\t\t\t<Centered>\n\t\t\t\t<h1>Encrypt Decrypt Text</h1>\n\t\t\t\t<Card maxWidth=\"600px\">\n\t\t\t\t\t<FormContext.Provider value={[formState, setFormState]}>\n\t\t\t\t\t\t<Wrapper mb=\"1rem\">\n\t\t\t\t\t\t\t<ToggleButtons name=\"type\" options={[\"Encrypt\", \"Decrypt\"]}>Encrypt</ToggleButtons>\n\t\t\t\t\t\t</Wrapper>\n\t\t\t\t\t\t<Textarea copy></Textarea>\n\t\t\t\t\t\t<Wrapper center>\n\t\t\t\t\t\t\t<Button onClick={doCrypt}>Click</Button>\n\t\t\t\t\t\t</Wrapper>\n\t\t\t\t\t</FormContext.Provider>\n\t\t\t\t</Card>\n\t\t\t</Centered>\n\t\t</Wrapper >\n\t);\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}